#User Module
user.module.title=Users

user.id=ID
user.firstName=First name
user.lastName=Last names
user.email=E-mail
user.password=Password.
user.login=Login.
user.institution=Institution
user.userProfiles=Roles
user.rememberme=Remember Me

#forms
user.registration.form.title=User Registration Form
user.show.form.title=User Details
user.list.form.title=List of Users
user.update.option=Update Information
user.add.new.option=New user
user.list.option=List users
#User Messages
user.add.success.message=User {0} {1} registered successfully
user.update.success.message=User {0} {1} updated successfully
user.remove.success.message=User {0} deleted successfully

#Hibernate validator with spring @valid
#Since we are using JSR validators in our application to validate user input, 
#we have configured the messages to be shown to user in case of validation failures. 
#shown below is message.properties file:
#Here, the key is <Annotation>.<object-name>.<attribute>. Value is the message to be displayed.
NotEmpty.user.firstName=First name can not be blank.
NotEmpty.user.lastName=Last name can not be blank.
NotEmpty.user.email=Email can not be blank.
NotEmpty.user.password=Password can not be blank.
NotEmpty.user.login=LOGIN can not be blank.
NotEmpty.user.userProfiles=At least one profile must be selected.
Email.user.email=Invalid email! Please enter valid email.
non.unique.user.login=LOGIN {0} already exist. Please fill in different value.

#Home Module
login.title=Log in
logout.title=Logout
login.invalid=Invalid login or password.
logout.success=You have been logged out successfully.

home.main.page.title=Main Page

#PROJECT MODULE
project.module.title=Projects

project.id=ID
project.name=Name
project.description=Description
project.casesensitive=Case Sensitive
project.language=Language
project.created.by=Created by
project.collaborators=Collaborators

#forms
project.registration.form.title=Project Registration Form
project.show.form.title=Project Details
project.list.form.title=List of Projects
project.update.option=Update Information
project.add.new.option=New Project
project.list.option=List Projects
project.select.option=Select a Project:
#Project Messages
project.add.success.message=Project {0} registered successfully
project.update.success.message=Project {0} updated successfully
project.remove.success.message=Project {0} deleted successfully

#Hibernate validator with spring @valid
#Since we are using JSR validators in our application to validate user input, 
#we have configured the messages to be shown to user in case of validation failures. 
#shown below is message.properties file:
#Here, the key is <Annotation>.<object-name>.<attribute>. Value is the message to be displayed.
NotEmpty.project.name=Name can not be blank.
NotEmpty.project.description=Description can not be blank.
non.unique.project.name=Project {0} already exist. Please fill in different value.

#SCENARIO MODULE
scenario.module.title=Scenarios

scenario.id=ID
scenario.title=Title
scenario.goal=Goal
scenario.context=Context
scenario.actors=Actors
scenario.resources=Resources
scenario.episodes=Episodes
scenario.alternative=Alternate / Exception

#forms
scenario.registration.form.title=Scenario Registration Form
scenario.show.form.title=Scenario Details
scenario.list.form.title=List of Scenarios
scenario.update.option=Update Information
scenario.add.new.option=New Scenario
scenario.list.option=List Scenarios
scenario.select.option=Select a Scenario:
#Project Messages
scenario.add.success.message=Scenario {0} registered successfully
scenario.update.success.message=Scenario {0} updated successfully
scenario.remove.success.message=Scenario {0} deleted successfully

#Hibernate validator with spring @valid
#Since we are using JSR validators in our application to validate user input, 
#we have configured the messages to be shown to user in case of validation failures. 
#shown below is message.properties file:
#Here, the key is <Annotation>.<object-name>.<attribute>. Value is the message to be displayed.
NotEmpty.scenario.title=Title can not be blank.
NotEmpty.scenario.goal=Goal can not be blank.
NotEmpty.scenario.context=Context can not be blank.
NotEmpty.scenario.actors=Actors can not be blank.
NotEmpty.scenario.resources=Resources can not be blank.
NotEmpty.scenario.episodes=Episodes can not be blank.
non.unique.scenario.title=Scenario {0} already exist. Please fill in different value.

#LEXICON MODULE
lexicon.module.title=Lexicons

lexicon.id=ID
lexicon.name=Name
lexicon.notion=Notion
lexicon.impact=Impact
lexicon.type=Type

#forms
lexicon.registration.form.title=Lexicon Registration Form
lexicon.show.form.title=Lexicon Details
lexicon.list.form.title=List of Lexicons
lexicon.update.option=Update Information
lexicon.add.new.option=New Lexicon
lexicon.list.option=List Lexicons
lexicon.select.option=Select a Lexicon:
#Project Messages
lexicon.add.success.message=Lexicon {0} registered successfully
lexicon.update.success.message=Lexicon {0} updated successfully
lexicon.remove.success.message=Lexicon {0} deleted successfully

#Hibernate validator with spring @valid
#Since we are using JSR validators in our application to validate user input, 
#we have configured the messages to be shown to user in case of validation failures. 
#shown below is message.properties file:
#Here, the key is <Annotation>.<object-name>.<attribute>. Value is the message to be displayed.
NotEmpty.lexicon.name=Name can not be blank.
NotEmpty.lexicon.notion=Notion can not be blank.
NotEmpty.lexicon.impact=Impact can not be blank.
NotEmpty.lexicon.lexiconType=Select a Type.
non.unique.lexicon.name=Lexicon {0} already exist. Please fill in different value.

#ANALYSIS MODULE
analysis.module.title=Analysis

#forms
analysis.show.form.scenario.title=Scenario Analysis
analysis.show.form.project.title=Project Analysis
analysis.show.form.property.title=Property
analysis.show.form.defect.title=Defect
analysis.show.form.property.unambiguity.title=Unambiguity
analysis.show.form.property.completeness.title=Completeness
analysis.show.form.property.consistency.title=Consistency

#PETRINET MODULE
petrinet.module.title=Petri-Net

#forms
petrinet.show.form.scenario.title=Petri-Net
petrinet.show.form.scenario.integrated.title=Integrated Petri-Net
petrinet.show.form.download=Download Petri-Net

#SYSTEM
system.welcome.dear=Dear
system.welcome.title=Welcome to C&L.
system.access.dear=Dear
system.access.denied=You are not authorized to access this page.
system.resource.not.found=Resource Not Found Error Occurred, please contact support.


system.menu.index=Home
system.menu.menuitem=Menu Item
system.menu.submenu=Submenu
system.menu.submenuitem=Submenu Item

system.go.to=Go to

system.form.add=Register 
system.form.update=Edit
system.form.remove=Delete
system.form.cancel=Cancel
system.form.show=Show
system.form.query=Search
system.form.analyze=Analize
system.form.select.first=Select...

system.ok.option=Yes
system.not.option=No

system.message.error=Unexpected error. Please contact the Administrator.
system.message.unexpectederror=Unexpected error. Please contact the Administrator.